(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{523:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"git简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git简介"}},[s._v("#")]),s._v(" Git简介")]),s._v(" "),a("p",[s._v("Git 是目前世界上最先进的分布式版本控制系统。")]),s._v(" "),a("ol",[a("li",[s._v("版本控制（典型的代表word文件编辑，你的文件夹中是不是有这样的情况）")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("word123.doc\nword备份.doc\nword-02.doc\nword.doc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("而某一天，你可能需要以前修改的版本（因为，经常遇到这种抽风的上司或者客户）\n这时候版本控制就可以带来全新的体验：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("版本    用户      说明        日期\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("       张三    修改内容5    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("/18 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":38\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("       张三    修改内容3    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("/19 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":09\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("       李四    修改内容2    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("/19 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(":51\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("       张三    修改内容1    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("/20 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":17\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这时候你想会退到哪里，就可以回退到哪里！世上本无后悔药，git恰恰好为我们准备了无尽的后悔药。\n2. 分布式 VS 集中式\n集中式，典型的代表就是SVN，版本库是集中存放在中央服务器的，而干活的时候，用的是自己的电脑，所以先从中行服务器取得的最新版本，然后开始干活，干完活，再把自己的劳动成果推送给中央服务器。")]),s._v(" "),a("p",[s._v("分布式，分布式版本控制系统根本没有“中央服务器”，每个人的电脑都有完整的版本库，分布式控制系统的安全性高很多，因为每个人电脑都有完整的版本库，某一个人的电脑坏掉不用进，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是坏掉了，所有人都没办法干活了。")]),s._v(" "),a("h3",{attrs:{id:"git环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git环境搭建"}},[s._v("#")]),s._v(" Git环境搭建")]),s._v(" "),a("h4",{attrs:{id:"安装git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装git"}},[s._v("#")]),s._v(" 安装Git")]),s._v(" "),a("ul",[a("li",[s._v("在Window上安装Git，从这里 "),a("a",{attrs:{href:"https://git-for-window.github.io",target:"_blank",rel:"noopener noreferrer"}},[s._v("下载链接"),a("OutboundLink")],1),s._v(",下载完成后，双击安装，安装完成后，可以在右键菜单/开始菜单中找到“git” -> “Git Bash”，然后会弹出一个命令行工具，这时候就安装成功了")]),s._v(" "),a("li",[s._v("Mac OS 上安装Git，安装homebrew，然后通过homebrew来安装Git。")])]),s._v(" "),a("h4",{attrs:{id:"全局变量设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量设置"}},[s._v("#")]),s._v(" 全局变量设置")]),s._v(" "),a("p",[s._v("git需要设置一些全局变量。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Name"')]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email@example.com"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("设置用户与email，相当于自报家门，让版本库有一个记录。注意：git config 命令的 --global 是全局设置的意思。")]),s._v(" "),a("h4",{attrs:{id:"创建版本库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[s._v("#")]),s._v(" 创建版本库")]),s._v(" "),a("p",[s._v("如果你需要在learngit目录下创建一个Git仓库，你可以按照如下操作")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" learngit\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" learngit\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("或者你也可以这样")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init learngit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[s._v("#")]),s._v(" 基本操作")]),s._v(" "),a("h4",{attrs:{id:"git工作区和暂存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git工作区和暂存区"}},[s._v("#")]),s._v(" Git工作区和暂存区")]),s._v(" "),a("p",[s._v("我们看到目录learngit，其实就是一个工作区，需要进行提交的文件会放在暂存区。")]),s._v(" "),a("p",[a("code",[s._v("git status")]),s._v(" 命令：可以让我们时刻掌握仓库当前状态。")]),s._v(" "),a("p",[a("code",[s._v("git diff")]),s._v(" 命令：让帮助我们查看文件与版本库中的区别。")]),s._v(" "),a("h4",{attrs:{id:"远程仓库代码-前提是已经init过了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库代码-前提是已经init过了"}},[s._v("#")]),s._v(" 远程仓库代码（前提是已经init过了）")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("克隆仓库：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("user@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("example.com:path/to/repo.git/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("或者添加远程仓库：")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("git remote add")]),s._v(" 命令，添加一个远程仓库链接，命令格式："),a("code",[s._v("git remote add [远程仓库别名] [远程仓库地址]")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin git@github.com:learn/learngit.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("拉取代码：")]),s._v(" "),a("p",[s._v("如果已经被git管理的项目，则使用"),a("code",[s._v("git pull")]),s._v("和 "),a("code",[s._v("git fetch")]),s._v("来管理代码的拉取和更\n新：使用 "),a("code",[s._v("git pull")]),s._v(" 拉取远程代码的HEAD标记头，即更新代码。")]),s._v(" "),a("p",[s._v("命令格式："),a("code",[s._v("$git pull [远程主机名称] [远程分支名称]:[本地分支名称]")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("// 下列命令的意思就是将远程的master分支代码拉取到本地的dev分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master:dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"拉取代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拉取代码"}},[s._v("#")]),s._v(" 拉取代码")]),s._v(" "),a("p",[s._v("把所有的文件更改提交到暂存区：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("为所有暂存区的代码写入日志并且提交到本地仓库：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"someting about commit"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("把所有的提交，都提交到远程仓库")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"git时光机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git时光机"}},[s._v("#")]),s._v(" Git时光机")]),s._v(" "),a("p",[s._v("    1. git log命令：查看每次修改的日志文件。")]),s._v(" "),a("p",[s._v("     git log与 git reflog的区别，记得几点：git log是顺着当前分支往前去查找提交记录，而git reflog并不像git log 去遍历提交历史，它都不是仓库的一部分，它不包含推送、更新或者克隆，而是作为本地提交记录的清单。简单理解：本地后悔药。")]),s._v(" "),a("p",[s._v("    2. git reset命令：回退命令。")]),s._v(" "),a("p",[s._v("     首先，Git必须知道当前版本是哪个版本，在Git中，用"),a("code",[s._v("HEAD")]),s._v(" 表示当前版本，上一个版本就是HEAD^,上上个版本就是HEAD^^,当然往上100个版本写成100个^比较容易数不过来，所以写成HEAD～100。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" HEAD^\nHEAD is now at ea87966 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" distributed\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("注意如果使用了 reset进行版本回退，此时缓存区的修改内容将被还原")]),s._v(", 需要和 "),a("code",[s._v("git checkout")]),s._v(" 进行区分（git checkout 只能恢复 git add 之前的状态）。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("git reset HEAD可以将暂存区的所有文件恢复到工作区。")]),s._v(" "),a("p",[s._v("    3. git checkout命令：丢弃工作区文件的修改。")]),s._v(" "),a("p",[s._v("    4. 使用 git restore --staged <文件名> 命令：可以取消暂存区的修改，文件的修改会回到工作区。")]),s._v(" "),a("p",[s._v("    5. git diff HEAD命令：可以查看工作区和版本库里面最新版本的区别。")]),s._v(" "),a("p",[s._v("    6. git rm：删除文件。")]),s._v(" "),a("h3",{attrs:{id:"标签管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签管理"}},[s._v("#")]),s._v(" 标签管理")]),s._v(" "),a("p",[s._v("发布一个版本的时候，我们通常现在版本库中打一个标签，这样，就确定了大标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个标签的历史版本取出来。所以，标签也是版本库的一个快照。")]),s._v(" "),a("p",[s._v("Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针（跟分支很像对不对？但是分支可以移动，标签却不能移动），所以，创建和删除标签都是瞬间完成的。")]),s._v(" "),a("p",[s._v("     1. 创建标签（快照）\n      在Git中打标签非常简单，首先，切换到需要打标签的分支上：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n* dev\n  master\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("      然后，敲命令git tag就可以打一个新标签")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag v1.0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("      可以用命令git tag 查看所有标签：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag\nv1.0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("默认标签是搭载最新提交的commit上的。有时候，如果忘了打标签，比如，现在一斤故事周五了，但应该在周一打的标签没有打，怎么办？")]),s._v(" "),a("p",[s._v("方法是找到历史提交的commit id，然后为此提交id，打上tag就可以了：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("减少log信息数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" --abbrev-commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("仅仅显示SHA-1前几个字符"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n6a5819e merged bug fix "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\ncc17032 fix bug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n7825a50 merge with no-ff\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6224937")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" merge\n59bc1cb conflict fixed\n400b400 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" simple\n75a857c AND simple\nfec145a branch "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\nd17efd8 remove test.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("比方说要对add merge这次提交打标签，它对应的commit id是 "),a("code",[s._v("59bc1cb")]),s._v(", 敲入命令：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag v0.1 59bc1cb\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("再用git tag查看标签：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag\nv0.1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("< 注意，标签不是按照时间顺序列出的，而是按字母排序的。")]),s._v(" "),a("p",[s._v("可以用"),a("code",[s._v("git show")]),s._v("查看标签信息：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" show v0.1\ncommit 37c8c587afcb81a238363781ad19d04b1b6c06eb\nAuthor: xxx \nDate:   Tue Feb "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":04:32 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2022")]),s._v(" +0800\n    conflict fixed\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("可以看到，v0.9确实打在了 conflict fixed 这次提交上。")]),s._v(" "),a("p",[s._v("还可以创建带有说明的标签，用 "),a("code",[s._v("-a")]),s._v("指定标签签名，"),a("code",[s._v("-m")]),s._v("指定说明文字：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("   $ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" v0.1 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version 0.1 released"')]),s._v(" 59bc1cb\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("      2. 标签操作（删除推送）\n命令"),a("code",[s._v("git push origin 标签名")]),s._v(" 可以推送一个本地标签；\n命令"),a("code",[s._v("git push origin --tags")]),s._v(" 可以推送全部未推送过的本地标签；\n命令"),a("code",[s._v("git tag -d 标签名")]),s._v(" 可以删除一个本地标签；\n命令"),a("code",[s._v("git push origin :refs/tags/标签名")]),s._v(" 可以删除一个远程标签。")]),s._v(" "),a("p",[s._v("如果标签已经推送到远程，要删除远程标签就麻烦一点，先冲本地删除：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" v0.1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后，从远程删除。删除命令也是push，但是格式如下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin :refs/tags/v0.1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"使用-gitignore忽略文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-gitignore忽略文件"}},[s._v("#")]),s._v(" 使用.gitignore忽略文件")]),s._v(" "),a("p",[s._v("有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如node_modules,重要的密码配置等等。")]),s._v(" "),a("p",[s._v("Git提供给我们忽略掉一些文件的跟踪，那就是在Git工作区的根目录下创建一个特殊的.gitignore 文件，然后把药忽略的文件名填进去，git就会自动忽略这些文件。")]),s._v(" "),a("p",[s._v("不需要从头写 .gitignore 文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文可以直接浏览，"),a("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考网址"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);