(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{602:function(t,a,s){"use strict";s.r(a);var e=s(13),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"git简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git简介"}},[t._v("#")]),t._v(" Git简介")]),t._v(" "),s("p",[t._v("Git 是目前世界上最先进的分布式版本控制系统。")]),t._v(" "),s("ol",[s("li",[t._v("版本控制（典型的代表word文件编辑，你的文件夹中是不是有这样的情况）")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("word123.doc\nword备份.doc\nword-02.doc\nword.doc\n")])])]),s("p",[t._v("而某一天，你可能需要以前修改的版本（因为，经常遇到这种抽风的上司或者客户）\n这时候版本控制就可以带来全新的体验：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("版本    用户      说明        日期\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       张三    修改内容5    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("/18 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":38\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("       张三    修改内容3    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("/19 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":09\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("       李四    修改内容2    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("/19 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":51\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("       张三    修改内容1    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("/20 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":17\n")])])]),s("p",[t._v("这时候你想会退到哪里，就可以回退到哪里！世上本无后悔药，git恰恰好为我们准备了无尽的后悔药。\n2. 分布式 VS 集中式\n集中式，典型的代表就是SVN，版本库是集中存放在中央服务器的，而干活的时候，用的是自己的电脑，所以先从中行服务器取得的最新版本，然后开始干活，干完活，再把自己的劳动成果推送给中央服务器。")]),t._v(" "),s("p",[t._v("分布式，分布式版本控制系统根本没有“中央服务器”，每个人的电脑都有完整的版本库，分布式控制系统的安全性高很多，因为每个人电脑都有完整的版本库，某一个人的电脑坏掉不用进，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是坏掉了，所有人都没办法干活了。")]),t._v(" "),s("h3",{attrs:{id:"git环境搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git环境搭建"}},[t._v("#")]),t._v(" Git环境搭建")]),t._v(" "),s("h4",{attrs:{id:"安装git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装git"}},[t._v("#")]),t._v(" 安装Git")]),t._v(" "),s("ul",[s("li",[t._v("在Window上安装Git，从这里 "),s("a",{attrs:{href:"https://git-for-window.github.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载链接"),s("OutboundLink")],1),t._v(",下载完成后，双击安装，安装完成后，可以在右键菜单/开始菜单中找到“git” -> “Git Bash”，然后会弹出一个命令行工具，这时候就安装成功了")]),t._v(" "),s("li",[t._v("Mac OS 上安装Git，安装homebrew，然后通过homebrew来安装Git。")])]),t._v(" "),s("h4",{attrs:{id:"全局变量设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量设置"}},[t._v("#")]),t._v(" 全局变量设置")]),t._v(" "),s("p",[t._v("git需要设置一些全局变量。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email@example.com"')]),t._v("\n")])])]),s("p",[t._v("设置用户与email，相当于自报家门，让版本库有一个记录。注意：git config 命令的 --global 是全局设置的意思。")]),t._v(" "),s("h4",{attrs:{id:"创建版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[t._v("#")]),t._v(" 创建版本库")]),t._v(" "),s("p",[t._v("如果你需要在learngit目录下创建一个Git仓库，你可以按照如下操作")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" learngit\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" learngit\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),s("p",[t._v("或者你也可以这样")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init learngit\n")])])]),s("h3",{attrs:{id:"基本操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),s("h4",{attrs:{id:"git工作区和暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git工作区和暂存区"}},[t._v("#")]),t._v(" Git工作区和暂存区")]),t._v(" "),s("p",[t._v("我们看到目录learngit，其实就是一个工作区，需要进行提交的文件会放在暂存区。")]),t._v(" "),s("p",[s("code",[t._v("git status")]),t._v(" 命令：可以让我们时刻掌握仓库当前状态。")]),t._v(" "),s("p",[s("code",[t._v("git diff")]),t._v(" 命令：让帮助我们查看文件与版本库中的区别。")]),t._v(" "),s("h4",{attrs:{id:"远程仓库代码-前提是已经init过了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库代码-前提是已经init过了"}},[t._v("#")]),t._v(" 远程仓库代码（前提是已经init过了）")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("克隆仓库：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("user@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("example.com:path/to/repo.git/\n")])])])]),t._v(" "),s("li",[s("p",[t._v("或者添加远程仓库：")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("git remote add")]),t._v(" 命令，添加一个远程仓库链接，命令格式："),s("code",[t._v("git remote add [远程仓库别名] [远程仓库地址]")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:learn/learngit.git\n")])])])]),t._v(" "),s("li",[s("p",[t._v("拉取代码：")]),t._v(" "),s("p",[t._v("如果已经被git管理的项目，则使用"),s("code",[t._v("git pull")]),t._v("和 "),s("code",[t._v("git fetch")]),t._v("来管理代码的拉取和更\n新：使用 "),s("code",[t._v("git pull")]),t._v(" 拉取远程代码的HEAD标记头，即更新代码。")]),t._v(" "),s("p",[t._v("命令格式："),s("code",[t._v("$git pull [远程主机名称] [远程分支名称]:[本地分支名称]")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// 下列命令的意思就是将远程的master分支代码拉取到本地的dev分支\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master:dev\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"拉取代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取代码"}},[t._v("#")]),t._v(" 拉取代码")]),t._v(" "),s("p",[t._v("把所有的文件更改提交到暂存区：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -a\n")])])]),s("p",[t._v("为所有暂存区的代码写入日志并且提交到本地仓库：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someting about commit"')]),t._v("\n")])])]),s("p",[t._v("把所有的提交，都提交到远程仓库")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);